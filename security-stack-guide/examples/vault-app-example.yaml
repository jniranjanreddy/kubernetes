# Example: Application using Vault for secrets injection

---
# Step 1: Create a service account for the app
apiVersion: v1
kind: ServiceAccount
metadata:
  name: myapp
  namespace: default

---
# Step 2: Deploy application with Vault annotations
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-with-vault
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp-vault
  template:
    metadata:
      labels:
        app: myapp-vault
      annotations:
        # Enable Vault agent injection
        vault.hashicorp.com/agent-inject: "true"
        
        # Vault role to use
        vault.hashicorp.com/role: "myapp"
        
        # Inject database credentials
        vault.hashicorp.com/agent-inject-secret-database: "secret/data/myapp/database"
        vault.hashicorp.com/agent-inject-template-database: |
          {{- with secret "secret/data/myapp/database" -}}
          export DB_HOST="{{ .Data.data.host }}"
          export DB_PORT="{{ .Data.data.port }}"
          export DB_USER="{{ .Data.data.username }}"
          export DB_PASS="{{ .Data.data.password }}"
          export DB_NAME="{{ .Data.data.database }}"
          {{- end }}
        
        # Inject API keys
        vault.hashicorp.com/agent-inject-secret-api: "secret/data/myapp/api"
        vault.hashicorp.com/agent-inject-template-api: |
          {{- with secret "secret/data/myapp/api" -}}
          export API_KEY="{{ .Data.data.key }}"
          export API_SECRET="{{ .Data.data.secret }}"
          {{- end }}
    spec:
      serviceAccountName: myapp
      containers:
      - name: app
        image: busybox:latest
        command: 
          - /bin/sh
          - -c
          - |
            # Source the secrets
            source /vault/secrets/database
            source /vault/secrets/api
            
            # Your application code here
            echo "Database: $DB_HOST:$DB_PORT"
            echo "API Key: ${API_KEY:0:10}..."
            
            # Keep container running for demo
            tail -f /dev/null
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"

---
# Step 3: Verify secrets are injected
# kubectl exec -n default -it <pod-name> -c app -- sh
# cat /vault/secrets/database
# cat /vault/secrets/api

